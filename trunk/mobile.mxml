<?xml version="1.0" encoding="utf-8"?>
<s:ViewNavigatorApplication xmlns:fx="http://ns.adobe.com/mxml/2009" locale="zh-CN"
    xmlns:s="library://ns.adobe.com/flex/spark" initialize="init()"
    applicationDPI="240"
    splashScreenImage="@Embed('assets/splash.png')"
    splashScreenScaleMode="zoom"
    splashScreenMinimumDisplayTime="3000">

    <fx:Style source="main.css" />
    <fx:Style>
        @namespace s "library://ns.adobe.com/flex/spark";
 
        s|ActionBar
        {
        }
 
        s|ActionBar #titleDisplay
        {
        }
 
        s|TabbedViewNavigator #tabBar
        {
            iconPlacement:top;
        }
        s|ViewMenuItem
        {
            iconPlacement:left;
	        color:#ffffff;
	        skinClass: ClassReference("com.airsmth.skins.CustomViewMenuItemSkin");
        }
        
        s|ViewMenu
        {
	        skinClass: ClassReference("com.airsmth.skins.CustomViewMenuSkin");
        }

    </fx:Style>
    <fx:Script>
        <![CDATA[
            import mx.events.FlexEvent;
            import flash.events.*;
            import com.airsmth.defines.*;
            import com.airsmth.views.*;
            public var isFirst:Boolean = true;
            import spark.components.Label;
            
            [Bindable]
            public var globalSMTH:SMTH;
            
            protected function init():void {
                NativeApplication.nativeApplication.addEventListener(Event.EXITING, onExit);
                var config:Config = Util.getConfig();
                globalSMTH = new SMTH(config);
                if (globalSMTH.isGuest) navigator.firstView = HomeView;
                else {
                    var sl:SMTHLoader = new SMTHLoader(config);
                    sl.addEventListener(LoadEvent.LOGINDONE, onLoginDone);
                    sl.addEventListener(LoadEvent.LOGINFAIL, onLoginFail);
                    sl.load();
                }
            }
            
            protected function onLoginDone(event:Event):void {
            
                globalSMTH.acFavor = (event.currentTarget as SMTHLoader).acFavor;
                globalSMTH.config = (event.currentTarget as SMTHLoader).config;
                globalSMTH.isLoggedOn = true;
                Util.saveConfig(globalSMTH.config);
                checkMail();
                
            }
            
            protected function onLoginFail(event:Event):void {
                navigator.pushView(LoginView, 1);
            }
            
            protected function onExit(event:Event):void {
            }
            
            protected function onBackKeyPressed(event:FlexEvent):void {
                event.preventDefault();
            }
            
            protected function checkMail():void {
                var mc:MailChecker = new MailChecker();
                mc.addEventListener(LoadEvent.RELOGIN, onReloginRequest);
                mc.addEventListener(LoadEvent.DONE, onMailCheck);
                mc.load();
            }
            protected function onMailCheck(event:Event):void {
                var mc:MailChecker = event.currentTarget as MailChecker;
                globalSMTH.isNewMail = mc.isNewMail;
                globalSMTH.newmailcnt = mc.newmailcnt;

                setTimeout(checkMail, 120000);
                if (isFirst) { 
                    navigator.pushView(HomeView);
                    isFirst = false;
                }
                else {
                    if (globalSMTH.isNewMail) {
                        var lb:Label = new Label();
                        lb.text = "您有 " + globalSMTH.newmailcnt + " 封新邮件";
                        lb.styleName = "loading";
                        navigator.activeView.addElementAt(lb, 1);
                    }
                }
            }
            
            protected function onReloginRequest(event:Event):void {
                globalSMTH.isLoggedOn = false;
                var rl:LoginLoader = new LoginLoader(new Auth(globalSMTH.config.id, globalSMTH.config.pass));
                rl.addEventListener(LoadEvent.LOGINDONE, onRelogined);
                rl.load();
            }
            protected function onRelogined(event:Event):void {
                var rl:LoginLoader = event.currentTarget as LoginLoader;
                globalSMTH.isLoggedOn = true;
                checkMail();
            }
            
        ]]>
    </fx:Script>
    <!-- s:ViewNavigator id="homeTab" width="100%" height="100%"
        icon="@Embed(source='assets/heart.png')" />
    <s:ViewNavigator id="mailTab" width="100%" height="100%"
        firstView="com.airsmth.views.MailFolderView"
        icon="@Embed(source='assets/mail_white.png')" /-->
</s:ViewNavigatorApplication>
