<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
    xmlns:s="library://ns.adobe.com/flex/spark" 
    creationComplete="init()">
    <s:layout>
        <s:VerticalLayout paddingTop="5"/>
    </s:layout>
        
    <fx:Script>
        <![CDATA[
            import spark.events.IndexChangeEvent;
            import com.airsmth.defines.*;
            import com.airsmth.renders.*;
            import com.airsmth.views.*;
            private var cnt_loaded:Number;
            private var cnt_all:Number;
            
            public function init():void {
                var sl:SubjectLoader = new SubjectLoader(data as Subject);
                lbSubTitle.text = (data as Subject).title;
                sl.addEventListener(LoadEvent.DONE, onLoad);
                sl.load();
            }
            
            public function onLoad(event:Event):void {
                var sl:SubjectLoader = event.currentTarget as SubjectLoader;
                var sub:Subject = sl.subject;
                postList.dataProvider = sl.data;
                if (sub.tpage == 1) {
                    sprevBtn.enabled = false;
                    snextBtn.enabled = false;
                }
                if (sub.pno > 1) sprevBtn.enabled = true;
                else sprevBtn.enabled = false;
                if (sub.pno < sub.tpage) snextBtn.enabled = true;
                else snextBtn.enabled = false;
                var pages:ArrayCollection = new ArrayCollection();
                for (i = 1; i <= sub.tpage; i++) { pages.addItem(i); }
                jump.dataProvider = pages;
                jump.selectedIndex = sub.pno - 1;
                cnt_all = sl.data.length;
                cnt_loaded = 0;
                               
                for (var i:Number = 0; i < sl.data.length; i++) {
        	        //nw PostLoader(sl.data.getItemAt(i) as Post, postList, i);
                    loadPost(sl.data.getItemAt(i) as Post, i);
                }
            }
            
            public function loadPost(post:Post, idx:Number):void {
                var pl:PostLoader = new PostLoader(post, idx, parentApplication.globalSMTH.config);
                pl.addEventListener(LoadEvent.DONE, loadPostDone);
                pl.load();
            }
            
            public function loadPostDone(event:Event):void {
                var pl:PostLoader = event.currentTarget as PostLoader;
                var idx:Number = pl.idx;
                var po:Post = pl.post;
                postList.dataProvider.setItemAt(po, idx);
                cnt_loaded = cnt_loaded + 1;
                lbLoaded.text = cnt_loaded.toString() + "/" + cnt_all.toString();
            }
            
            protected function next():void {
                var sub:Subject = data as Subject;
                sub.pno = sub.pno + 1;
                navigator.replaceView(PostView, sub);
            }
            
            protected function prev():void {
                var sub:Subject = data as Subject;
                sub.pno = sub.pno - 1;
                navigator.replaceView(PostView, sub);
            }
            protected function jumpPage(page:Number):void {
                var sub:Subject = data as Subject;
                sub.pno = page;
                navigator.replaceView(PostView, sub);
            }
            
            protected function menuOpen():void {
                var post:Post = postList.selectedItem as Post;
                var I:String = parentApplication.globalSMTH.config.id;
                if (post.lz == I) {
                    meTrash.visible = true;
                    meTrash.includeInLayout = true;
                } else {
                    meTrash.visible = false;
                    meTrash.includeInLayout = false;
                }
                parentApplication.viewMenuOpen=true;
            }
            
            protected function expandall():void {
                for each(var post:Post in postList.dataProvider) {
                    post.showrefer = true;
                    
                }
            }

        ]]>
    </fx:Script>
    <fx:Declarations>
        <s:ArrayCollection id="data"/>
    </fx:Declarations>
    <s:navigationContent>
        <s:Button icon="@Embed(source='../../../assets/back.png')" click="navigator.popView()" />
        <s:Button icon="@Embed(source='../../../assets/prev_post_page.png')" click="prev()" id="sprevBtn" enabled="false"/>
        <s:Button icon="@Embed(source='../../../assets/next_post_page.png')" click="next()" id="snextBtn" enabled="false"/>
        <s:ComboBox id="jump" width="60" change="jumpPage(jump.selectedIndex + 1)" />
    </s:navigationContent>
    <s:actionContent>
        <s:Button icon="@Embed(source='../../../assets/expandall.png')" click="expandall()" id="expandBtn" />
    </s:actionContent>
    <s:HGroup width="100%">
    <s:Label id="lbSubTitle" styleName="subjecttitle"/>
    <s:Label id="lbLoaded"  textAlign="end" width="100%" styleName="postindex"/>
    </s:HGroup>
    <s:List id="postList"
        width="100%" height="100%" 
        itemRendererFunction="RenderUtil.selectRenderer"
        click="menuOpen()" />
        
    <s:viewMenuItems>
        <s:ViewMenuItem click="postList.selectedItem.showrefer = true"
            icon="@Embed(source='../../../assets/post_expand.png')" />
        <s:ViewMenuItem click="navigator.pushView(ReplyView, postList.selectedItem)"
            icon="@Embed(source='../../../assets/reply_post.png')" />
        <s:ViewMenuItem 
            icon="@Embed(source='../../../assets/mail_white.png')" enabled="false" />
        <s:ViewMenuItem id="meTrash"
            icon="@Embed(source='../../../assets/trash.png')" enabled="false" />
    </s:viewMenuItems>
</s:View>