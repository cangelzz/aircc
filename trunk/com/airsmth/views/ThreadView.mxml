<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
    xmlns:s="library://ns.adobe.com/flex/spark" 
    creationComplete="init()">
    <s:layout>
        <s:VerticalLayout paddingTop="5" paddingLeft="5" paddingRight="5" paddingBottom="20"/>
    </s:layout>
        
    <fx:Script>
        <![CDATA[
            import com.airsmth.defines.*;
            import com.airsmth.views.*;
            import com.airsmth.renders.*;
            
            [@Embed(source='../../../assets/th_subject.png')]
            [Bindable]
            public var iconSubject:Class;

            [@Embed(source='../../../assets/th_single.png')]
            [Bindable]
            public var iconSingle:Class;
            
            [@Embed(source='../../../assets/th_digest.png')]
            [Bindable]
            public var iconDigest:Class;

            [@Embed(source='../../../assets/th_mark.png')]
            [Bindable]
            public var iconMark:Class;
            
            public var CurBoard:Board;

            protected function init():void {
                if (data is ArrayCollection) {
                    if (parentApplication.globalSMTH.config.autoupdate) {
                        loadBoard(data[0] as Board);
                        return;
                    }
                    threadList.dataProvider = data[1] as ArrayCollection;
                    setPageUI(data[0] as Board);
                    return;
                }
                var board:Board = data as Board;
                loadBoard(board);
            }
            
            protected function loadBoard(board:Board):void {
                var bl:BoardLoader = new BoardLoader(board, parentApplication.globalSMTH.config);
                bl.addEventListener(LoadEvent.DONE, onLoad);
                bl.addEventListener(LoadEvent.LOADSTART, onLoadStart);
                bl.addEventListener(LoadEvent.REDIRBOARD, onRedirect);
                bl.load();
            }
            
            protected function onRedirect(event:Event):void {
                var bl:BoardLoader = event.currentTarget as BoardLoader;
                var para:String = bl.redirect;
                var fl:FavorLoader = new FavorLoader(para, "BBSBOA");
                fl.addEventListener(LoadEvent.DONE, onGroupLoad);
                fl.load();
            }
            
            protected function onGroupLoad(event:Event):void {
                //(event.currentTarget as FavorLoader).removeEventListener(LoadEvent.DONE, onLoad);
                navigator.replaceView(BoardView, (event.currentTarget as FavorLoader).data);
            }
            
            
            protected function setPageUI(board:Board):void {
                if (board.ftype == "6") typeBtn.setStyle("icon", iconSubject);
                if (board.ftype == "0") typeBtn.setStyle("icon", iconSingle);
                if (board.ftype == "1") typeBtn.setStyle("icon", iconDigest);
                if (board.ftype == "3") typeBtn.setStyle("icon", iconMark);
                if (board.start <= board.total - 30) bnextBtn.enabled = true;
                else bnextBtn.enabled = false;
                if (!Util.isInFavor(board.bname, parentApplication.globalSMTH.acFavor)) meAddFavor.enabled = true;
                else meAddFavor.enabled = false;
            }
            
            protected function onLoad(event:Event):void {
                lbInfo.includeInLayout = false;
                var bl:BoardLoader = event.currentTarget as BoardLoader;
                var brd:Board = bl.board;
                threadList.dataProvider = bl.data;
                setPageUI(brd);
                data = new ArrayCollection([bl.board, bl.data]);
            }
            
            protected function onLoadStart(event:Event):void {
                lbInfo.includeInLayout = true;
            }
            
            protected function next():void {
                var board:Board = data[0] as Board;
                board.page = board.page + 1;
                navigator.replaceView(ThreadView, board);
            }
            
            protected function prev():void {
                var board:Board = data[0] as Board;
                board.page = board.page - 1;
                loadBoard(board)
            }
            
            protected function last():void {
                var board:Board = data[0] as Board;
                board.page = 0;
                loadBoard(board)
            }
            
            protected function newPost():void {
                var post:Post = new Post();
                post.bname = (data[0] as Board).bname;
                post.id = "0";
                navigator.pushView(ReplyView, post);
            }
            
            protected function refresh():void {
                //navigator.replaceView(ThreadView, data[0] as Board);
                loadBoard(data[0] as Board);
            }
            
            protected function changeType():void {
                var board:Board = data[0] as Board;
                if (board.ftype == "6") board.ftype = "0";
                else board.ftype = "6";
                board.page = 0;
                loadBoard(board)
            }
            
            protected function filterType(type:Number = 0):void {
                var board:Board = data[0] as Board;
                board.page = 0;
                if (type != 0) board.ftype = type.toString();
                loadBoard(board)
            }
            
            protected function go():void {
                var ftype:String = (data[0] as Board).ftype;
                if (ftype == "0") navigator.pushView(SinglePostView, threadList.selectedItem);
                else navigator.pushView(PostView, threadList.selectedItem);
            }
            
            protected function addFavor():void {
                var fl:FavorLoader = new FavorLoader("select=0&bname=" + (data[0] as Board).bname);
                fl.addEventListener(LoadEvent.DONE, onAddFavor);
                fl.load();
            }
            
            protected function onAddFavor(event:Event):void {
                parentApplication.globalSMTH.acFavor = (event.currentTarget as FavorLoader).data;
                if (Util.isInFavor((data[0] as Board).bname, parentApplication.globalSMTH.acFavor)) meAddFavor.enabled = false;
                else meAddFavor.enabled = true;
            }
            
        ]]>
    </fx:Script>
    <fx:Declarations>
        <s:ArrayCollection id="data"/>
    </fx:Declarations>
    <s:navigationContent>
        <s:Button icon="@Embed(source='../../../assets/back.png')" click="navigator.popView()" />
        <s:Button icon="@Embed(source='../../../assets/prev_th_page.png')" click="prev()" id="bprevBtn" />
        <s:Button icon="@Embed(source='../../../assets/next_th_page.png')" click="next()" id="bnextBtn" enabled="false" />
        <!--s:Button icon="@Embed(source='../../../assets/last_th_page.png')" click="last()" id="lastBtn" /-->
        <s:Button click="changeType()" id="typeBtn" />
    </s:navigationContent>
    <s:actionContent>
        <s:Button icon="@Embed(source='../../../assets/refresh.png')" click="refresh()" id="refreshBtn" />
        <s:Button icon="@Embed(source='../../../assets/more.png')" click="parentApplication.viewMenuOpen=true" id="menuBtn" />
        <!--s:Button icon="@Embed(source='../../../assets/new_post.png')" click="newPost()" id="newBtn" /-->
    </s:actionContent>
    <s:Label id="lbInfo" styleName="loading" text="正在加载，请稍候 ..." includeInLayout="false"/>
    <s:List id="threadList"
        width="100%" height="100%"
        change="go()"
        itemRendererFunction="RenderUtil.selectRenderer" />
    <s:viewMenuItems>
        <s:ViewMenuItem click="newPost()"
            icon="@Embed(source='../../../assets/new_post.png')" />
        <s:ViewMenuItem click="last()"
            icon="@Embed(source='../../../assets/last_th_page.png')" />
        <s:ViewMenuItem click="filterType(1)"
            icon="@Embed(source='../../../assets/th_digest.png')" />
        <s:ViewMenuItem click="filterType(3)"
            icon="@Embed(source='../../../assets/th_mark.png')" />
        <s:ViewMenuItem click="addFavor()" id="meAddFavor"
            icon="@Embed(source='../../../assets/addfavor.png')" enabled="false"/>
    </s:viewMenuItems>
</s:View>