<?xml version="1.0" encoding="utf-8" ?> 
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009" 
    xmlns:s="library://ns.adobe.com/flex/spark" 
    xmlns:mx="library://ns.adobe.com/flex/mx" skinClass="com.airsmth.skins.WindowedApplication"
    minWidth="1024" 
    minHeight="768"
    creationComplete="initApp()"> 
    <fx:Style source="main.css" />
    <fx:Style>
        @namespace "library://ns.adobe.com/flex/spark";
        WindowedApplication {
            font-size:16px;
            font-family: "SimSun", Helvetica, Arial, Calibri;
        }
        #boardList { border-style: solid}
    </fx:Style>
          
    <fx:Script>
        <![CDATA[ 
            import flash.utils.ByteArray;
        	import com.airsmth.defines.*;
        	import com.airsmth.renders.*;
            import mx.utils.URLUtil;
            import mx.collections.ArrayCollection;
            import mx.collections.ArrayList;
            import flash.events.Event;
            import spark.events.GridEvent;
            import mx.controls.Alert;
            private var stream:flash.net.URLStream;
            private var acThread:ArrayCollection;
            private var acPost:ArrayCollection;
            private var acBoard:ArrayCollection;
            private var isLoggedIn:Boolean = false;
            private var isFavorUpdated:Boolean = false;
            private var smth:SMTH;
                        
            public function initApp():void 
            { 
                //maximize();
                var f:File = new File("app:/config.xml");
                var r:FileStream = new FileStream();
                r.open(f, FileMode.READ);
                var config:XML = XML(r.readUTFBytes(r.bytesAvailable));
                r.close();
                var log:Login = new Login(config.auth.id, config.auth.pass);
                smth = new SMTH(log, boardList);
                smth.login();
                
            } 
            
            public function toggleboardList():void
            {
                boardList.width = 150 - boardList.width;
                boardList.visible = !boardList.visible;
            }
            
            public function prevBoard():void {
                var board:Board = boardList.selectedItem as Board;
                board.page = board.page - 1;
                loadBoard(board);
            }
            
            public function nextBoard():void {
                var board:Board = boardList.selectedItem as Board;
                board.page = board.page + 1;
                loadBoard(board);
            }
            
            public function prevPage():void {
                var sub:Subject = threadList.selectedItem as Subject;
                sub.pno = sub.pno - 1;
                loadSubject(sub);
            }
            public function nextPage():void {
                var sub:Subject = threadList.selectedItem as Subject;
                sub.pno = sub.pno + 1;
                loadSubject(sub);
            }
            
            public function jumpPage(page:Number):void {
                var sub:Subject = threadList.selectedItem as Subject;
                sub.pno = page;
                loadSubject(sub);
            }
            
            public function test(str:String):void {
                str = "1\r\n2";
                var target:String = UrlMultiEncode.urlencodeGB2312(str);
                
   
                
                //target = escape(b.toString());
                Alert.show(target);
                
            }
            
            public function loadBoard(board:Board, page:String = null):void {
                if (page != null) board.page = 0;
                var bl:BoardLoader = new BoardLoader(board);
                bl.addEventListener(LoadEvent.DONE, loadBoardDone);
                bl.load();
            }
            
            public function loadBoardDone(event:Event):void {
                var bl:BoardLoader = event.currentTarget as BoardLoader;
                var brd:Board = bl.board;
                threadList.dataProvider = bl.data;
                if (brd.start <= brd.total - 30) bnextBtn.enabled = true;
                else bnextBtn.enabled = false;
            }
            
            public function loadSubject(subject:Subject):void {
                var sl:SubjectLoader = new SubjectLoader(subject);
                sl.addEventListener(LoadEvent.DONE, loadSubjectDone);
                sl.load();
            }
            
            public function loadSubjectDone(event:Event):void {
                var sl:SubjectLoader = event.currentTarget as SubjectLoader;
                var sub:Subject = sl.subject;
                postList.dataProvider = sl.data;
                if (sub.tpage == 1) {
                    sprevBtn.enabled = false;
                    snextBtn.enabled = false;
                }
                if (sub.pno > 1) sprevBtn.enabled = true;
                else sprevBtn.enabled = false;
                if (sub.pno < sub.tpage) snextBtn.enabled = true;
                else snextBtn.enabled = false;
                var pages:ArrayCollection = new ArrayCollection();
                for (i = 1; i <= sub.tpage; i++) { pages.addItem(i); }
                jump.dataProvider = pages;
                jump.selectedIndex = sub.pno - 1;
                
                for (var i:Number = 0; i < sl.data.length; i++) {
        	        //nw PostLoader(sl.data.getItemAt(i) as Post, postList, i);
                    loadPost(sl.data.getItemAt(i) as Post, i);
                }
               
            } // loadSubject
            
            public function loadPost(post:Post, idx:Number):void {
                var pl:PostLoader = new PostLoader(post, idx);
                pl.addEventListener(LoadEvent.DONE, loadPostDone);
                pl.load();
            }
            
            public function loadPostDone(event:Event):void {
                var pl:PostLoader = event.currentTarget as PostLoader;
                var idx:Number = pl.idx;
                var po:Post = pl.post;
                postList.dataProvider.setItemAt(po, idx);
            }
            
        ]]> 
    </fx:Script> 
     
    <s:HGroup left="5" top="5" right="5" bottom="5" height="100%">
        <s:VGroup width="500" height="100%">
            <s:HGroup>
                <s:Button icon="@Embed(source='assets/star.png')" click="toggleboardList()" />
                <s:Button icon="@Embed(source='assets/mail_red.png')" />
                <s:Button icon="@Embed(source='assets/prev.png')" click="prevBoard()" id="bprevBtn" />
                <s:Button icon="@Embed(source='assets/next.png')" click="nextBoard()" id="bnextBtn" />
                <s:TextInput id="tInput" width="100"/>
                <s:Button click="test(tInput.text)" label="test" />
            </s:HGroup>
            <mx:ViewStack id="stackLeft" borderStyle="none" width="100%" height="100%"
            	creationPolicy="all">
                <mx:Canvas id="vBoard" width="100%" height="100%">
                <s:HGroup width="100%" height="100%" gap="-1">
                    <s:List id="boardList" width="150" height="100%" itemRendererFunction="RenderUtil.selectRenderer"
                        change="loadBoard(boardList.selectedItem, 'top')" />
                    <s:List id="threadList" width="100%" height="100%"
                        itemRendererFunction="RenderUtil.selectRenderer"
				        change="loadSubject(threadList.selectedItem)" />
                </s:HGroup>
                </mx:Canvas>
            </mx:ViewStack>
        </s:VGroup>
        
        <s:VGroup left="10" right="10" top="10" bottom="10" width="100%" height="100%">

            <s:HGroup>
                <s:Button icon="@Embed(source='assets/prev.png')" click="prevPage()" id="sprevBtn" />
                <s:Button icon="@Embed(source='assets/next.png')" click="nextPage()" id="snextBtn" />
                <s:ComboBox id="jump" width="40" change="jumpPage(jump.selectedIndex + 1)" />
            </s:HGroup>

            <!-- Define the ViewStack and the three child containers and have it
                    resize up to the size of the container for the buttons. -->
            <mx:ViewStack id="myViewStack" borderStyle="none" width="100%" height="100%"
            	creationPolicy="all">
                <mx:Canvas id="vSubject" backgroundColor="#CCFFFF" width="100%" height="100%">
                    <s:List id="postList" width="100%" height="100%"
                        itemRendererFunction="RenderUtil.selectRenderer" />
                </mx:Canvas>
            </mx:ViewStack>            
        </s:VGroup>
    </s:HGroup>
</s:WindowedApplication>