<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
    xmlns:s="library://ns.adobe.com/flex/spark" 
    viewActivate="init()">
    <s:layout>
        <s:VerticalLayout paddingTop="5"/>
    </s:layout>
        
    <fx:Script>
        <![CDATA[
            import spark.events.IndexChangeEvent;
            import com.airsmth.defines.*;
            import com.airsmth.renders.*;
            import com.airsmth.views.*;
            
            public function init():void {
                var sl:SubjectLoader = new SubjectLoader(data as Subject);
                sl.addEventListener(LoadEvent.DONE, onLoad);
                sl.load();
            }
            
            public function onLoad(event:Event):void {
                var sl:SubjectLoader = event.currentTarget as SubjectLoader;
                var sub:Subject = sl.subject;
                postList.dataProvider = sl.data;
                if (sub.tpage == 1) {
                    sprevBtn.enabled = false;
                    snextBtn.enabled = false;
                }
                if (sub.pno > 1) sprevBtn.enabled = true;
                else sprevBtn.enabled = false;
                if (sub.pno < sub.tpage) snextBtn.enabled = true;
                else snextBtn.enabled = false;
                var pages:ArrayCollection = new ArrayCollection();
                for (i = 1; i <= sub.tpage; i++) { pages.addItem(i); }
                jump.dataProvider = pages;
                jump.selectedIndex = sub.pno - 1;
                
                for (var i:Number = 0; i < sl.data.length; i++) {
        	        //nw PostLoader(sl.data.getItemAt(i) as Post, postList, i);
                    loadPost(sl.data.getItemAt(i) as Post, i);
                }
            }
            
            public function loadPost(post:Post, idx:Number):void {
                var pl:PostLoader = new PostLoader(post, idx);
                pl.addEventListener(LoadEvent.DONE, loadPostDone);
                pl.load();
            }
            
            public function loadPostDone(event:Event):void {
                var pl:PostLoader = event.currentTarget as PostLoader;
                var idx:Number = pl.idx;
                var po:Post = pl.post;
                postList.dataProvider.setItemAt(po, idx);
            }
            
            protected function next():void {
                var sub:Subject = data as Subject;
                sub.pno = sub.pno + 1;
                navigator.replaceView(PostView, sub);
            }
            
            protected function prev():void {
                var sub:Subject = data as Subject;
                sub.pno = sub.pno - 1;
                navigator.replaceView(PostView, sub);
            }
            protected function jumpPage(page:Number):void {
                var sub:Subject = data as Subject;
                sub.pno = page;
                navigator.replaceView(PostView, sub);
            }
            
            protected function menuOpen():void {
                var post:Post = postList.selectedItem as Post;
                var I:String = mx.core.FlexGlobals.topLevelApplication.TopConfig.auth.id;
                if (post.lz == I) meTrash.enabled = true;
                else meTrash.enabled = false;
                //mx.core.FlexGlobals.topLevelApplication.viewMenuOpen=true;
            }

        ]]>
    </fx:Script>
    <fx:Declarations>
        <s:ArrayCollection id="data"/>
    </fx:Declarations>
    <s:navigationContent>
        <s:Button icon="@Embed(source='../../../assets/back.png')" click="navigator.popView()" />
        <s:Button icon="@Embed(source='../../../assets/prev.png')" click="prev()" id="sprevBtn" />
        <s:Button icon="@Embed(source='../../../assets/next.png')" click="next()" id="snextBtn" />
        <s:ComboBox id="jump" width="40" change="jumpPage(jump.selectedIndex + 1)" />
    </s:navigationContent>
    <s:List id="postList"
        width="100%" height="100%" 
        itemRendererFunction="RenderUtil.selectRenderer" />
        
    <s:viewMenuItems>
        <s:ViewMenuItem click="navigator.pushView(ReplyView, postList.selectedItem)"
            icon="@Embed(source='../../../assets/reply.png')" />
        <s:ViewMenuItem id="meTrash"
            icon="@Embed(source='../../../assets/trash.png')" />
        <s:ViewMenuItem 
            icon="@Embed(source='../../../assets/mail_white.png')" />
    </s:viewMenuItems>
</s:View>