<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
    xmlns:s="library://ns.adobe.com/flex/spark" xmlns:ria="spark.controls.*"
    creationComplete="init()">
    <s:layout>
        <s:VerticalLayout paddingTop="10" paddingLeft="5" paddingRight="5" paddingBottom="20"/>
    </s:layout>
        
    <fx:Script>
        <![CDATA[
            import spark.events.IndexChangeEvent;
            import com.airsmth.defines.*;
            import com.airsmth.renders.*;
            import com.airsmth.views.*;
            private var cnt_loaded:Number;
            private var cnt_all:Number;
            private var last_index:Number = -1;
            private var CurSub:Subject;
            
            protected function init():void {
                if (data is ArrayCollection) {
                    if (parentApplication.globalSMTH.config.autoupdate) {
                        loadSubject(data[0] as Subject);
                        return;
                    }
                
                    postList.dataProvider = data[1] as ArrayCollection;
                    setPageUI(data[0] as Subject);
                    return;
                }
                loadSubject(data as Subject);
            }
            
            protected function onLoadSubjectStart(event:Event):void {
                lbInfo.visible = true;
                lbInfo.includeInLayout = true;
            }
            
            protected function loadSubject(sub:Subject):void {
                var sl:SubjectLoader = new SubjectLoader(sub);
                sl.addEventListener(LoadEvent.DONE, onLoad);
                sl.addEventListener(LoadEvent.LOADSTART, onLoadSubjectStart);
                sl.load();
            }
            
            protected function setPageUI(sub:Subject):void {
                replyBtn.enabled = false;
                lbSubTitle.text = sub.title;
                if ("0" == sub.nthid) nextsubBtn.enabled = false;
                if (sub.tpage == 1) {
                    sprevBtn.enabled = false;
                    snextBtn.enabled = false;
                }
                if (sub.pno > 1) sprevBtn.enabled = true;
                else sprevBtn.enabled = false;
                if (sub.pno < sub.tpage) snextBtn.enabled = true;
                else snextBtn.enabled = false;
                setJump(sub.tpage, sub.pno);
            }
            
            protected function setJump(all:Number, cur:Number):void {
                var pages:ArrayCollection = new ArrayCollection();
                for (var i:Number = 1; i <= all; i++) {
                    pages.addItem({label: i.toString()});
                }
                jump.dataProvider = pages;
                jump.selectedIndex = cur - 1;
            }
            
            protected function jumpPage(event:Event):void {
                var sub:Subject = data[0] as Subject;
                sub.pno = Number((event.currentTarget as ButtonBox).label);
                loadSubject(sub);
            }
            
            protected function onLoad(event:Event):void {
                lbInfo.visible = false;
                lbInfo.includeInLayout = false;
                var sl:SubjectLoader = event.currentTarget as SubjectLoader;
                var sub:Subject = sl.subject;
                setPageUI(sub);
                data = new ArrayCollection([sl.subject, sl.data]);
                
                postList.dataProvider = sl.data;
                cnt_all = sl.data.length;
                cnt_loaded = 0;
                               
                for (var i:Number = 0; i < sl.data.length; i++) {
        	        //nw PostLoader(sl.data.getItemAt(i) as Post, postList, i);
                    loadPost(sl.data.getItemAt(i) as Post, i);
                }
            }
            
            protected function loadPost(post:Post, idx:Number):void {
                var pl:PostLoader = new PostLoader(post, idx, parentApplication.globalSMTH.config);
                pl.addEventListener(LoadEvent.DONE, loadPostDone);
                pl.load();
            }
            
            protected function loadPostDone(event:Event):void {
                var pl:PostLoader = event.currentTarget as PostLoader;
                var idx:Number = pl.idx;
                var po:Post = pl.post;
                
                //actually this is a bug, this just avoid the exception, 
                //but may happens as the post is inserted to wrong subject
                if (idx < postList.dataProvider.length) { 
                    postList.dataProvider.setItemAt(po, idx);
                    cnt_loaded = cnt_loaded + 1;
                    lbLoaded.text = cnt_loaded.toString() + "/" + cnt_all.toString();
                    data.setItemAt(postList.dataProvider, 1);
                }
            }
            
            protected function next():void {
                var sub:Subject = data[0] as Subject;
                sub.pno = sub.pno + 1;
                loadSubject(sub);
                //navigator.replaceView(PostView, sub);
            }
            
            protected function prev():void {
                var sub:Subject = data[0] as Subject;
                sub.pno = sub.pno - 1;
                loadSubject(sub);
                //navigator.replaceView(PostView, sub);
            }
            protected function jumpPagex(page:Number):void {
                var sub:Subject = data[0] as Subject;
                sub.pno = page;
                loadSubject(sub);
                //navigator.replaceView(PostView, sub);
            }
            
            protected function menuOpen():void {
                var lz:String;
                if (postList.selectedIndex != -1) {
                    lz = (postList.selectedItem as Post).lz;
                }
                var I:String = parentApplication.globalSMTH.config.id;
                if (lz == I) {
                    meTrash.enabled = true;
                } else {
                    meTrash.enabled = false;
                }
                parentApplication.viewMenuOpen=true;
            }
            
            protected function postClick(event:IndexChangeEvent):void {
                if (event.newIndex != -1) replyBtn.enabled = true;
                if (parentApplication.globalSMTH.config.showrefer) {
                    if (event.oldIndex != -1) postList.dataProvider[event.oldIndex].showrefer = true;
                    postList.dataProvider[event.newIndex].showrefer = false;
                }
            }
            
            protected function expandall():void {
                for each(var post:Post in postList.dataProvider) {
                    post.showrefer = true;
                    
                }
            }

            protected function prevsub():void {
                var sub:Subject = new Subject(); 
                sub.bname = (data[0] as Subject).bname;
                sub.gid = (data[0] as Subject).pthid;
                sub.pno = 1;
                loadSubject(sub);
            }
            
            protected function nextsub():void {
                var sub:Subject = new Subject(); 
                sub.bname = (data[0] as Subject).bname;
                sub.gid = (data[0] as Subject).nthid;
                loadSubject(sub);
            }
            
            protected function refresh():void {
                loadSubject(data[0] as Subject);
            }
            
            protected function forward():void {
                var fw:Forward = new Forward(postList.selectedItem as Post);
                navigator.pushView(ForwardView, fw);
            }
            
        ]]>
    </fx:Script>
    <fx:Declarations>
        <s:ArrayCollection id="data"/>
    </fx:Declarations>
    <s:navigationContent>
        <s:Button icon="@Embed(source='../../../assets/back.png')" click="navigator.popView()" id="btnBack"/>
        <s:Button icon="@Embed(source='../../../assets/prev_post_page.png')" click="prev()" id="sprevBtn" enabled="false"/>
        <s:Button icon="@Embed(source='../../../assets/next_post_page.png')" click="next()" id="snextBtn" enabled="false"/>
        <ria:ButtonBox id="jump" labelField="label" width="{btnBack.width}" height="{btnBack.height}"
            selected="jumpPage(event)" />
    </s:navigationContent>
    <s:actionContent>
        <s:Button icon="@Embed(source='../../../assets/reply_post.png')" 
            click="navigator.pushView(ReplyView, postList.selectedItem)" id="replyBtn" enabled="false" />
        <s:Button icon="@Embed(source='../../../assets/more.png')" click="menuOpen()" id="moreBtn" />
    </s:actionContent>
    <!-- s:Label id="lbDebug" /-->
    <s:HGroup width="100%">
    <s:Label id="lbInfo" styleName="loading" text="正在加载，请稍候 ..." includeInLayout="false"/>
    <s:Label id="lbSubTitle" styleName="subjecttitle"/>
    <s:Label id="lbLoaded"  textAlign="end" width="100%" styleName="postindex"/>
    </s:HGroup>
    <s:List id="postList"
        width="100%" height="100%" 
        itemRendererFunction="RenderUtil.selectRenderer"
        change="postClick(event)" />
    <s:viewMenuItems>
        <s:ViewMenuItem click="prevsub()"
            icon="@Embed(source='../../../assets/prev_sub.png')" />
        <s:ViewMenuItem click="nextsub()" id="nextsubBtn"
            icon="@Embed(source='../../../assets/next_sub.png')" />
        <s:ViewMenuItem click="refresh()"
            icon="@Embed(source='../../../assets/refresh.png')" />
        <s:ViewMenuItem click="expandall()"
            icon="@Embed(source='../../../assets/post_expand.png')" enabled="{!(parentApplication.globalSMTH.config.showrefer as Boolean)}" />
        <s:ViewMenuItem 
            icon="@Embed(source='../../../assets/post_forward.png')" click="forward()" />
        <s:ViewMenuItem id="meTrash"
            icon="@Embed(source='../../../assets/trash.png')" enabled="false" />
    </s:viewMenuItems>
</s:View>