<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
    xmlns:s="library://ns.adobe.com/flex/spark" 
    creationComplete="init()">
    <s:layout>
        <s:VerticalLayout paddingTop="5"/>
    </s:layout>
        
    <fx:Script>
        <![CDATA[
            import com.airsmth.defines.*;
            import com.airsmth.views.*;
            import com.airsmth.renders.*;
            
            [@Embed(source='../../../assets/th_subject.png')]
            [Bindable]
            public var iconSubject:Class;

            [@Embed(source='../../../assets/th_single.png')]
            [Bindable]
            public var iconSingle:Class;
            
            [@Embed(source='../../../assets/th_digest.png')]
            [Bindable]
            public var iconDigest:Class;

            [@Embed(source='../../../assets/th_mark.png')]
            [Bindable]
            public var iconMark:Class;

            public function init():void {
                var board:Board = data as Board;
                if (board.ftype == "6") typeBtn.setStyle("icon", iconSubject);
                if (board.ftype == "0") typeBtn.setStyle("icon", iconSingle);
                if (board.ftype == "1") typeBtn.setStyle("icon", iconDigest);
                if (board.ftype == "3") typeBtn.setStyle("icon", iconMark);
                
                var bl:BoardLoader = new BoardLoader(data as Board, parentApplication.globalSMTH.config);
                bl.addEventListener(LoadEvent.DONE, onLoad);
                bl.load();
            }
            
            public function onLoad(event:Event):void {
                var bl:BoardLoader = event.currentTarget as BoardLoader;
                var brd:Board = bl.board;
                threadList.dataProvider = bl.data;
                if (brd.start <= brd.total - 30) bnextBtn.enabled = true;
                else bnextBtn.enabled = false;
            }
            
            protected function next():void {
                var board:Board = data as Board;
                board.page = board.page + 1;
                navigator.replaceView(ThreadView, board);
            }
            
            protected function prev():void {
                var board:Board = data as Board;
                board.page = board.page - 1;
                navigator.replaceView(ThreadView, board);
            }
            
            protected function last():void {
                var board:Board = data as Board;
                board.page = 0;
                navigator.replaceView(ThreadView, board);
            }
            
            protected function newPost():void {
                navigator.pushView(NewPostView, (data as Board).bname);
            }
            
            protected function refresh():void {
                navigator.replaceView(ThreadView, data as Board);
            }
            
            protected function changeType():void {
                var board:Board = data as Board;
                if (board.ftype == "6") board.ftype = "0";
                else board.ftype = "6";
                board.page = 0;
                navigator.replaceView(ThreadView, board);
            }
            
            protected function filterType(type:Number = 0):void {
                var board:Board = data as Board;
                board.page = 0;
                if (type != 0) board.ftype = type.toString();
                navigator.replaceView(ThreadView, board);
            }
            
        ]]>
    </fx:Script>
    <fx:Declarations>
        <s:ArrayCollection id="data"/>
    </fx:Declarations>
    <s:navigationContent>
        <s:Button icon="@Embed(source='../../../assets/back.png')" click="navigator.popView()" />
        <s:Button icon="@Embed(source='../../../assets/prev_th_page.png')" click="prev()" id="bprevBtn" />
        <s:Button icon="@Embed(source='../../../assets/next_th_page.png')" click="next()" id="bnextBtn" />
        <s:Button icon="@Embed(source='../../../assets/last_th_page.png')" click="last()" id="lastBtn" />
        <s:Button click="changeType()" id="typeBtn" />
    </s:navigationContent>
    <s:actionContent>
        <s:Button icon="@Embed(source='../../../assets/refresh.png')" click="refresh()" id="refreshBtn" />
        <s:Button icon="@Embed(source='../../../assets/more.png')" click="mx.core.FlexGlobals.topLevelApplication.viewMenuOpen=true" id="menuBtn" />
        <s:Button icon="@Embed(source='../../../assets/new_post.png')" click="newPost()" id="newBtn" />
    </s:actionContent>
    <s:List id="threadList"
        width="100%" height="100%"
        change="navigator.pushView(PostView, threadList.selectedItem)"
        itemRendererFunction="RenderUtil.selectRenderer" />
    <s:viewMenuItems>
        <s:ViewMenuItem click="filterType(1)"
            icon="@Embed(source='../../../assets/th_digest.png')" />
        <s:ViewMenuItem click="filterType(3)"
            icon="@Embed(source='../../../assets/th_mark.png')" />
        <s:ViewMenuItem 
            icon="@Embed(source='../../../assets/mail_white.png')" enabled="false" />
    </s:viewMenuItems>
</s:View>