<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
    xmlns:s="library://ns.adobe.com/flex/spark" 
    creationComplete="init()">
    <s:layout>
        <s:VerticalLayout paddingTop="10" paddingLeft="10" paddingRight="10" paddingBottom="20"/>
    </s:layout>
        
    <fx:Script>
        <![CDATA[
            import spark.events.IndexChangeEvent;
            import com.airsmth.defines.*;
            import com.airsmth.renders.*;
            import com.airsmth.views.*;
            [Bindable]
            public var loading:Boolean = false;
            
            protected function init():void {
                var post:Post;
                if (data is Post) {
                    setPageUI(data as Post);
                    return;
                }
                
                if (data is Subject) {
                    var subject:Subject = data as Subject;
                    post = new Post();
                    post.bid = subject.bid;
                    post.id = subject.pid;
                    post.author = subject.author;
                    post.gid = subject.gid;
                    post.bname = subject.bname;
                }
                
                loadPost(post);
            }
            
            protected function loadPost(post:Post, newdata:URLVariables = null):void {
                var pl:PostLoader = new PostLoader(post, 0, true, newdata);
                pl.addEventListener(LoadEvent.DONE, onLoad);
                loading = true;
                pl.load();
            }
            
            protected function onLoad(event:Event):void {
                loading = false;
                var post:Post = (event.currentTarget as PostLoader).post;
                data = post;
                setPageUI(post);
            }
            
            protected function setPageUI(post:Post):void {
                lbSubTitle.text = post.title;
                lbAuthor.text = post.author;
                lbContent.text = post.content;
                lbReply.visible = post.showrefer;
                lbReply.text = post.reply;
                expandBtn.enabled = true;
            }
            
            protected function menuOpen():void {
                var I:String = parentApplication.globalSMTH.config.id;
                if (lbAuthor.text == I) {
                    meTrash.visible = true;
                    meTrash.includeInLayout = true;
                } else {
                    meTrash.visible = false;
                    meTrash.includeInLayout = false;
                }
                parentApplication.viewMenuOpen=true;
            }
            
            protected function expandsubject():void {
                var sub:Subject = new Subject();
                sub.bname = (data as Post).bname;
                sub.gid = (data as Post).gid;
                navigator.pushView(PostView, sub);
            }
            protected function go(target:String):void {
                var post:Post = data as Post;
                post.id = target;
                loadPost(post);
            }
            
            protected function forward():void {
                var fw:Forward;
                if (parentApplication.globalSMTH.config.directforward && parentApplication.globalSMTH.config.defaulttarget != "") {
                    fw = new Forward(data as Post);
                    fw.target = parentApplication.globalSMTH.config.defaulttarget;
                    lbInfo.text = "正在转寄，请稍候 ...";
                    loading = true;
                    var fs:ForwardSender = new ForwardSender(fw);
                    fs.addEventListener(LoadEvent.DONE, onForward);
                    fs.addEventListener(LoadEvent.LOADFAIL, onForwardFail);
                    fs.load();
                    return;
                }
            
                fw = new Forward(data as Post);
                navigator.pushView(ForwardView, fw);
            }
            
            protected function onForward(event:Event):void {
                lbInfo.text = "转寄成功";
                setTimeout(function ():void {
                    loading = false
                    lbInfo.text = "正在加载，请稍候 ...";
                    }, 2000);
            }
            
            protected function onForwardFail(event:Event):void {
                lbInfo.text = "转寄失败";
                setTimeout(function ():void {
                    loading = false
                    lbInfo.text = "正在加载，请稍候 ...";
                    }, 4000);
            }
            
            protected function replymail():void {
                var para:URLVariables = new URLVariables();
                para.board = (data as Post).bname;
                para.id = (data as Post).id;
                navigator.pushView(MailEditView, para);
            }

        ]]>
    </fx:Script>
    <s:navigationContent>
        <s:Button click="navigator.popView()" icon="@Embed(source='../../../assets/back.png')" />
        <s:Button icon="@Embed(source='../../../assets/prev_mail_page.png')" click="loadPost(data as Post, (data as Post).pdata)" id="pprevBtn"/>
        <s:Button icon="@Embed(source='../../../assets/next_mail_page.png')" click="loadPost(data as Post, (data as Post).ndata)" id="pnextBtn"/>
    </s:navigationContent>
    <s:actionContent>
        <s:Button icon="@Embed(source='../../../assets/prev_sub.png')" click="loadPost(data as Post, (data as Post).tpdata)" id="tprevBtn"/>
        <s:Button icon="@Embed(source='../../../assets/next_sub.png')" click="loadPost(data as Post, (data as Post).tndata)" id="tnextBtn"/>
        <s:Button icon="@Embed(source='../../../assets/expandall.png')" click="expandsubject()" id="expandBtn" enabled="false" />
    </s:actionContent>
    <s:VGroup width="100%" click="menuOpen()">
    <s:Label id="lbSubTitle" paddingBottom="20" styleName="posttitle"/>
    <s:Label id="lbAuthor" styleName="postauthor"/>
    <s:Label id="lbContent" width="100%"/>
    <s:Label id="lbReply" width="100%" styleName="postreply"/>
    <s:Label id="lbInfo" text="正在加载，请稍候 ..." visible="{loading}" bottom="0" />
    </s:VGroup>

    <s:viewMenuItems>
        <s:ViewMenuItem click="navigator.pushView(ReplyView, data as Post)" label="回复"
            icon="@Embed(source='../../../assets/reply_post.png')" />
        <s:ViewMenuItem click="go((data as Post).gid)" label="第一篇"
            icon="@Embed(source='../../../assets/first.png')" />
        <s:ViewMenuItem click="go((data as Post).rid)" label="溯源"
            icon="@Embed(source='../../../assets/backrefer.png')" />
        <s:ViewMenuItem label="回信"
            icon="@Embed(source='../../../assets/post_reply_mail.png')" click="replymail()" enabled="{parentApplication.globalSMTH.isLoggedOn}" />
        <s:ViewMenuItem id="meTrash" label="删除"
            icon="@Embed(source='../../../assets/trash.png')" enabled="false" />
        <s:ViewMenuItem label="转寄"
            icon="@Embed(source='../../../assets/post_forward.png')" click="forward()" enabled="{parentApplication.globalSMTH.isLoggedOn}" />
    </s:viewMenuItems>
</s:View>